I've been learning a new shell lately.

#+TITLE: .fish.d
#+AUTHOR: Andrew Jarrett
#+EMAIL:ahrjarrett@gmail.com
#+DATE: 04/14/2019

Fish so far?

So far I'm really digging it. Maybe we're still in the honeymoon phase, but what's not to love about a [[https://fishshell.com/docs/current/index.html#editor][Command Line Editor]]? It's gotten me back into Vim, back into Emacs, back thinking about workflows again.

Discoverability is the glue that holds a workflow together. 

I've daydreamed before of a wrapper around [[https://github.com/ggreer/the_silver_searcher][ag]] that would let me glide through a knowledge- or a codebase, searching without knowing, fluid and fuzzy at the same time.

Which is why I'm also jazzed that I discovered [[https://github.com/junegunn/fzf][fzf]] around the same time. They feel great together.

True, there's a little work involved in getting them set up together, but as soon as I got them wired up it started to feel like it could be special.

* ~fish + fzf~

This repo is a work in progress and is plenty rough around the edges still, but I do have an environment that I'm starting to feel comfortable working on, and woriing in, at the same time.


** Key bindings

What I haven't figured out yet is how the key mappings will work. ~fzf~ was built with vi-style bindings in mind (or so it seems).

And fish definitely has that awkward hipster Emacs feel. There are "evil" style bindings for fish, but I'm a little wary.

Here's where I'm at as of right now:

The package I use is gracious enough to give you the option of legacy or newer keybindings; I actually like legacy, primarily because the new keybindings take away =^+f=:


| Legacy      | New Keybindings | Remarks                                         |
|-------------+-----------------+-------------------------------------------------|
| Ctrl-t      | Ctrl-f          | Find a file.                                    |
| Ctrl-r      | Ctrl-r          | Search through command history.                 |
| Alt-c       | Alt-o           | cd into sub-directories (recursively searched). |
| Alt-Shift-c | Alt-Shift-o     | cd into sub-directories, including hidden ones. |
| Ctrl-o      | Ctrl-o          | Open a file/dir using default editor ($EDITOR)  |
| Ctrl-g      | Ctrl-g          | Open a file/dir using xdg-open or open command  |

I'm forking it so I can play with some customizations, right now I'd like it to be:

| Binding | Behavior                                             |
|---------+------------------------------------------------------|
| \cs     | find a file                                          |
| \cr     | search through command history                       |
| \ec     | cd into subdirectory (recursive)                     |
| \eC     | cd into subdirecrory (recursive, show dotfiles)      |
| \co     | open file/dir with vim                               |
| \eo     | open file with open command (room for customization) |
|         |                                                      |

** Personal keybindings:

| Binding | Behavior                  |
|---------+---------------------------|
| Ctrl-g  | cancel (similar to emacs) |
| Ctrl-q  | omf reload                |


** Thinking of going rogue?

What really intrigued me about fish was when I saw [[https://fishshell.com/docs/current/index.html#editor][this snippet in their docs]]. 

#+BEGIN_SRC shell
  function hybrid_bindings --description 
    "Vi-style bindings that inherit 
    emacs-style bindings in all modes"
    for mode in default insert visual
      fish_default_key_bindings -M $mode
    end
    fish_vi_key_bindings --no-erase
  end
  set -g fish_key_bindings hybrid_bindings
#+END_SRC
 
See also the fish keybindings file in this directory.
 

 


* functions

** print_fish_colors

Prints a table with background in color displaying defined fish colors in scope.

#+BEGIN_SRC shell
function print_fish_colors --description 'Shows the various fish colors being used'
    set -l clr_list (set -n | grep fish | grep color | grep -v __)
    if test -n "$clr_list"
        set -l bclr (set_color normal)
        set -l bold (set_color --bold)
        printf "\n| %-38s | %-38s |\n" Variable Definition
        echo '|¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯|¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯|'
        for var in $clr_list
            set -l def $$var
            set -l clr (set_color $def ^/dev/null)
            or begin
                printf "| %-38s | %s%-38s$bclr |\n" "$var" (set_color --bold white --background=red) "$def"
                continue
            end
            printf "| $clr%-38s$bclr | $bold%-38s$bclr |\n" "$var" "$def"
        end
        echo '|________________________________________|________________________________________|'\n
    end
end
#+END_SRC

Returns (variable backgrounds renderingin color):

| Variable                               | Definition                             |
|¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯|¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯|
| fish_color_autosuggestion              | 555 brblack                            |
| fish_color_cancel                      | -r                                     |
| fish_color_command                     | 005fd7                                 |
| fish_color_comment                     | 990000                                 |
| fish_color_cwd                         | green                                  |
| fish_color_cwd_root                    | red                                    |
| fish_color_end                         | 009900                                 |
| fish_color_error                       | ff0000                                 |
| fish_color_escape                      | 00a6b2                                 |
| fish_color_history_current             | --bold                                 |
| fish_color_host                        | normal                                 |
| fish_color_match                       | --background=brblue                    |
| fish_color_normal                      | normal                                 |
| fish_color_operator                    | 00a6b2                                 |
| fish_color_param                       | 00afff                                 |
| fish_color_quote                       | 999900                                 |
| fish_color_redirection                 | 00afff                                 |
| fish_color_search_match                | bryellow --background=brblack          |
| fish_color_selection                   | white --bold --background=brblack      |
| fish_color_user                        | brgreen                                |
| fish_color_valid_path                  | --underline                            |
| fish_pager_color_completion            |                                        |
| fish_pager_color_description           | B3A06D yellow                          |
| fish_pager_color_prefix                | white --bold --underline               |
| fish_pager_color_progress              | brwhite --background=cyan              |
|________________________________________|________________________________________|
